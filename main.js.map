{"version":3,"sources":["init.js","io.js","showTables.js","sortable.js","app.js"],"names":["window","modulesList","menuList","includes","Array","prototype","searchElement","O","Object","len","parseInt","length","n","arguments","k","currentElement","push","angular","module","config","$sceDelegateProvider","resourceUrlWhitelist","service","$http","_resultCache","localStorage","JSON","parse","API_KEY","SEARCH_URL","MAX_RESULTS","getTestQuery","query","scope","target","formResult","data","result","i","items","videoID","id","videoId","channel","snippet","channelTitle","title","desc","description","show","request","encodeURI","jsonp","success","stringify","component","templateUrl","controller","youtube","$scope","self","isAscend","table","search","sortByColumn","filters","sortableOptions","placeholder","connectWith","handle","helper","receive","event","ui","receivedNew","update","receiveFix","filterTable","remove","fullTable","eidolon","item","dataset","splice","console","log","slice","_sortTable","a","b","AB","BA","sort","sortBy","column","t","symbol_up","symbol_down","reg_clear","currentTarget","textContent","indexOf","headers","parentNode","getElementsByClassName","replace","hide","pattern","j","toLowerCase","exportTable","$event","exportData","file","Blob","type","href","URL","createObjectURL","download","style","display","bindings","value","directive","uiSortableConfig","$timeout","$log","require","ngModel","uiSortable","link","element","attrs","savedNodes","combineCallbacks","first","second","firstIsFunc","secondIsFunc","apply","getSortableWidgetInstance","widgetFullName","patchSortableOption","key","callbacks","$apply","afterStop","wrappers","patchUISortableOptions","newVal","oldVal","sortableWidgetInstance","addDummyOptionKey","opts","forEach","optsDiff","defaultOptions","oldValue","directiveOpts","undefined","sortable","options","defaultValue","floating","getPlaceholderElement","getPlaceholderExcludesludes","notCssSelector","excludes","find","attr","hasSortingHelper","helperOption","isCustomHelperUsed","getSortingHelper","last","isFloating","test","css","getElementContext","elementScopes","c","e","_destroy","getItemIndex","parent","index","start","stop","extend","fn","jquery","error","wireUp","$watchCollection","siblings","model","$modelValue","source","sourceList","sourceModel","cancel","_isCanceled","isCanceled","_isCustomHelperUsed","_connectedSortables","_getElementContext","activate","isSourceContext","savedNodesOrigin","elementContext","contents","not","received","dropindex","droptarget","closest","droptargetList","droptargetContext","droptargetModel","sortingHelper","appendTo","moved","wasMoved","equals","toArray","inner","oldItemSortable","_restore","innerResult","init","info","initIfEnabled","disabled","cancelWatcher","noop","$watch","app"],"mappings":"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","file":"main.js","sourcesContent":["\"use strict\";\r\n\r\nwindow.modulesList = [];\r\nwindow.menuList = [];\r\n\r\n//includes polyfill by Mozilla\r\nif (![].includes) {\r\n\tArray.prototype.includes = function(searchElement) {\r\n\t\tvar O = Object(this);\r\n\t\tvar len = parseInt(O.length) || 0;\r\n\t\tif (len === 0) {\r\n\t\t\treturn false;\r\n\t\t}\r\n\t\tvar n = parseInt(arguments[1]) || 0;\r\n\t\tvar k;\r\n\t\tif (n >= 0) {\r\n\t\t\tk = n;\r\n\t\t} else {\r\n\t\t\tk = len + n;\r\n\t\t\tif (k < 0) {k = 0;}\r\n\t\t}\r\n\t\tvar currentElement;\r\n\t\twhile (k < len) {\r\n\t\t\tcurrentElement = O[k];\r\n\t\t\tif (searchElement === currentElement ||\r\n\t\t\t\t(searchElement !== searchElement && currentElement !== currentElement)) {\r\n\t\t\t\treturn true;\r\n\t\t\t}\r\n\t\t\tk++;\r\n\t\t}\r\n\t\treturn false;\r\n\t};\r\n}","modulesList.push(\"io\");\r\n\r\nangular.module('io', [])\r\n.config(['$sceDelegateProvider', function($sceDelegateProvider) {\r\n\t\r\n\t// We must whitelist the JSONP endpoint that we are using to show that we trust it\r\n\t$sceDelegateProvider.resourceUrlWhitelist([\r\n\t\t'self',\r\n\t\t'https://www.googleapis.com/**'\r\n\t]);\r\n}]);\r\n\r\n/**\r\n * Some External Service.\r\n *\r\n */\r\n \r\n \r\nangular.module('io').service('youtube', [\"$http\", function($http) {\r\n\t\r\n\t//caching is permanent right now. but in theory can be adjusted to have expiration time\r\n\tlet _resultCache = localStorage[\"resultCache\"];\r\n\t_resultCache = _resultCache ? JSON.parse(_resultCache) : {};\r\n\t\r\n\t//I created this youtube api key for this task\r\n\t//youtube api requires this key in order to allow their api usage.\r\n\tconst API_KEY = \"AIzaSyD-_-dfkHmDQfe8M3ejfIitllksmUGRsOY\";\r\n\t\r\n\tconst SEARCH_URL = \"https://www.googleapis.com/youtube/v3/search?part=id%2C+snippet\";\r\n\tconst MAX_RESULTS = 10;\r\n\t\r\n\t//retrives JSON from the specific query on youtube api\r\n\tthis.getTestQuery = function(query, scope, target) {\r\n\t\t\r\n\t\tfunction formResult(data) {\r\n\t\t\tlet result = [];\r\n\t\t\tfor(let i in data.items) {\r\n\t\t\t\tresult.push({\r\n\t\t\t\t\tvideoID: data.items[i].id.videoId ? data.items[i].id.videoId : false,\r\n\t\t\t\t\tchannel: data.items[i].snippet.channelTitle ? data.items[i].snippet.channelTitle : \"missing\",\r\n\t\t\t\t\ttitle: data.items[i].snippet.title ? data.items[i].snippet.title : \"missing\",\r\n\t\t\t\t\tdesc: data.items[i].snippet.description ? data.items[i].snippet.description : \"missing\",\r\n\t\t\t\t\tshow: true\r\n\t\t\t\t});\r\n\t\t\t}\r\n\r\n\t\t\tscope[target] = result;\r\n\t\t}\r\n\t\t\r\n\t\t//loading from cache if we can\r\n\t\tif(_resultCache[query]) {\r\n\t\t\tformResult(_resultCache[query]);\r\n\t\t\t\r\n\t\t\treturn;\r\n\t\t}\r\n\t\t\r\n\t\tlet request = `${ SEARCH_URL }&key=${ API_KEY }&maxResults=${ MAX_RESULTS }&q=${ encodeURI(query) }&callback=JSON_CALLBACK`;\r\n\t\t\r\n\t\t$http.jsonp(request).success(function(data){\r\n\t\t\t_resultCache[query] = data;\r\n\t\t\tlocalStorage[\"resultCache\"] = JSON.stringify(_resultCache);\r\n\t\t\t\r\n\t\t\tformResult(data);\r\n\t\t});\r\n\t\t\r\n\t}\r\n\t\r\n}]);","modulesList.push(\"showTables\");\r\n\r\nangular.module('showTables', []);\r\n\r\nangular.module('showTables').component('showTables', {\r\n\ttemplateUrl: 'templates/showTables.html',\r\n\tcontroller: [\"youtube\", \"$scope\", function(youtube, $scope) {\r\n\t\tvar self = this;\r\n\t\tvar isAscend = false;\r\n\t\tthis.table = false;\r\n\t\t\r\n\t\tif(this.search) {\r\n\t\t\tyoutube.getTestQuery( this.search, this, \"table\" );\r\n\t\t} else {\r\n\t\t\tthis.table = \"no search query provided\";\r\n\t\t}\r\n\t\t\r\n\t\tthis.sortByColumn = \"title\";\r\n\t\t\r\n\t\tthis.filters = {\r\n\t\t\tvideoID: \"\",\r\n\t\t\ttitle: \"\",\r\n\t\t\tchannel: \"\",\r\n\t\t\tdesc: \"\"\r\n\t\t}\r\n\t\t\r\n\t\tthis.show = {\r\n\t\t\ttitle: true,\r\n\t\t\tchannel: true,\r\n\t\t\tdescription: true\r\n\t\t}\r\n\t\t\r\n\t\tthis.sortableOptions = {\r\n\t\t\tplaceholder: \"app\",\r\n\t\t\tconnectWith: \".apps-container\",\r\n\t\t\thandle: \".handle\",\r\n\t\t\thelper: \"clone\",\r\n\t\t\treceive: function(event, ui) {\r\n\t\t\t\tself.sortableOptions.receivedNew = true;\r\n\t\t\t},\r\n\t\t\tupdate: function(event, ui) {\r\n\t\t\t\tif(self.sortableOptions.receivedNew == true) {\r\n\t\t\t\t\treceiveFix(event, ui);\r\n\t\t\t\t\tself.filterTable();\r\n\t\t\t\t}\r\n\t\t\t\tself.sortableOptions.receivedNew = false;\r\n\t\t\t},\r\n\t\t\tremove: function(event, ui) {\r\n\t\t\t\tif(self.fullTable) {\r\n\t\t\t\t\tlet eidolon = JSON.parse(ui.item[0].dataset.eidolon);\r\n\t\t\t\t\t\r\n\t\t\t\t\tfor(let i = 0; i < self.fullTable.length; i++) {\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\tif(self.fullTable[i].videoID == eidolon.videoID) {\r\n\t\t\t\t\t\t\tself.fullTable.splice(i, 1);\r\n\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t\t\r\n\t\t\t\t\tconsole.log(eidolon);\r\n\t\t\t\t}\r\n\t\t\t\t\r\n\t\t\t\t\r\n\t\t\t}\r\n\t\t};\r\n\t\t\r\n\t\t//workaround sollution for items moving between tables\r\n\t\t//should look at alternatives to angular-ui sortable as there seems to be some nasty bugs right now\r\n\t\tlet receiveFix = function(event, ui) {\r\n\t\t\tif(!self.fullTable) {\r\n\t\t\t\t//forming new real full table (wihout hidden elements)\r\n\t\t\t\tself.fullTable = self.table.slice(0);\r\n\t\t\t} else {\r\n\t\t\t\tlet eidolon = JSON.parse(ui.item[0].dataset.eidolon);\r\n\t\t\t\tself.fullTable.push(eidolon);\r\n\t\t\t}\r\n\t\t}\r\n\t\t\r\n\t\tlet _sortTable = function(a, b) {\r\n\t\t\tlet AB = a[self.sortByColumn] > b[self.sortByColumn];\r\n\t\t\tlet\tBA = a[self.sortByColumn] < b[self.sortByColumn];\r\n\t\t\t\r\n\t\t\tif(isAscend) {\r\n\t\t\t\tAB = !AB;\r\n\t\t\t\tBA = !BA;\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\tif(AB) return 1;\r\n\t\t\telse if(BA) return -1;\r\n\t\t\treturn 0;\r\n\t\t}\r\n\t\t\r\n\t\t//initial table sorting\r\n\t\tif(this.table) {\r\n\t\t\tthis.table.sort(_sortTable);\r\n\t\t}\r\n\t\t\r\n\t\t//sort method update on headers click\r\n\t\t//in order to control ordering flow, rather than using angular automatic one\r\n\t\tthis.sortBy = function(column, t) {\r\n\t\t\tconst symbol_up = \"↑\";\r\n\t\t\tconst symbol_down = \"↓\";\r\n\t\t\tconst reg_clear = /[↑↓]/g;\r\n\t\t\tisAscend = false;\r\n\r\n\t\t\tt = t.currentTarget;\r\n\t\t\t\r\n\t\t\tif(t.textContent.indexOf(symbol_down) != -1) {\r\n\t\t\t\tisAscend = true;\r\n\t\t\t}\r\n\r\n\t\t\tlet headers = t.parentNode.getElementsByClassName(\"row_head\");\r\n\t\t\tfor(let i in headers) {\r\n\t\t\t\tif(headers[i].textContent) {\r\n\t\t\t\t\theaders[i].textContent = headers[i].textContent.replace(reg_clear, \"\");\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\tif(isAscend) {\r\n\t\t\t\tt.textContent += \" \" + symbol_up;\r\n\t\t\t\tthis.sortByColumn = \"-\" + column;\r\n\t\t\t} else {\r\n\t\t\t\tt.textContent += \" \" + symbol_down;\r\n\t\t\t\tthis.sortByColumn = column;\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\tthis.table.sort(_sortTable);\r\n\r\n\t\t}\r\n\t\t\r\n\t\tthis.fullTable = false;\r\n\t\t\r\n\t\t//table column filtering\r\n\t\t//workaround for angular-ui sortable problems\r\n\t\tthis.filterTable = function() {\r\n\t\t\tlet hide = false;\r\n\t\t\tlet target;\r\n\t\t\tlet pattern;\r\n\t\t\t\r\n\t\t\tif(!self.fullTable) {\r\n\t\t\t\t//forming new real full table (wihout hidden elements)\r\n\t\t\t\tself.fullTable = self.table.slice(0);\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\tself.table = self.fullTable.slice(0);\r\n\t\t\t\r\n\t\t\tfor(var i = 0; i < self.table.length; i++) {\r\n\t\t\t\thide = false;\r\n\t\t\t\t\r\n\t\t\t\tfor(let j in self.filters) {\r\n\t\t\t\t\tif(!self.table[i][j]) {\r\n\t\t\t\t\t\tself.table[i][j] = \" \";\r\n\t\t\t\t\t}\r\n\t\t\t\t\ttarget = self.table[i][j].toLowerCase();\r\n\t\t\t\t\tpattern = self.filters[j].toLowerCase();\r\n\t\t\t\t\t\r\n\t\t\t\t\tif(target.indexOf( pattern ) == -1) {\r\n\t\t\t\t\t\thide = true;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\t\r\n\t\t\t\tif(hide) {\r\n\t\t\t\t\tself.table.splice(i, 1);\r\n\t\t\t\t\ti--;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\tself.table.sort(_sortTable);\r\n\t\t}\r\n\t\t\r\n\t\t//table export function\r\n\t\tthis.exportTable = function($event) {\r\n\t\t\tlet table = self.fullTable ? self.fullTable : self.table;\r\n\t\t\tlet exportData = JSON.stringify(table);\r\n\t\t\t\r\n\t\t\tlet a = $event.currentTarget.parentNode.getElementsByClassName(\"export_link\")[0];\r\n\t\t\tlet file = new Blob([exportData], {type: \"text/plain\"});\r\n\t\t\ta.href = URL.createObjectURL(file);\r\n\t\t\ta.download = \"export.json\";\r\n\t\t\ta.style.display = \"inline\";\r\n\t\t}\r\n\r\n\t}],\r\n\tbindings: {\r\n\t\tsearch: '@'\r\n\t}\r\n});","/*\n jQuery UI Sortable plugin wrapper\n\n @param [ui-sortable] {object} Options to pass to $.fn.sortable() merged onto ui.config\n */\n\nmodulesList.push(\"ui.sortable\");\n \nangular.module('ui.sortable', [])\n  .value('uiSortableConfig',{\n    // the default for jquery-ui sortable is \"> *\", we need to restrict this to\n    // ng-repeat items\n    // if the user uses\n    items: '> [ng-repeat],> [data-ng-repeat],> [x-ng-repeat]'\n  })\n  .directive('uiSortable', [\n    'uiSortableConfig', '$timeout', '$log',\n    function(uiSortableConfig, $timeout, $log) {\n      return {\n        require: '?ngModel',\n        scope: {\n          ngModel: '=',\n          uiSortable: '='\n        },\n        link: function(scope, element, attrs, ngModel) {\n          var savedNodes;\n\n          function combineCallbacks(first, second){\n            var firstIsFunc = typeof first === 'function';\n            var secondIsFunc = typeof second === 'function';\n            if(firstIsFunc && secondIsFunc) {\n              return function() {\n                first.apply(this, arguments);\n                second.apply(this, arguments);\n              };\n            } else if (secondIsFunc) {\n              return second;\n            }\n            return first;\n          }\n\n          function getSortableWidgetInstance(element) {\n            // this is a fix to support jquery-ui prior to v1.11.x\n            // otherwise we should be using `element.sortable('instance')`\n            var data = element.data('ui-sortable');\n            if (data && typeof data === 'object' && data.widgetFullName === 'ui-sortable') {\n              return data;\n            }\n            return null;\n          }\n\n          function patchSortableOption(key, value) {\n            if (callbacks[key]) {\n              if( key === 'stop' ){\n                // call apply after stop\n                value = combineCallbacks(\n                  value, function() { scope.$apply(); });\n\n                value = combineCallbacks(value, afterStop);\n              }\n              // wrap the callback\n              value = combineCallbacks(callbacks[key], value);\n            } else if (wrappers[key]) {\n              value = wrappers[key](value);\n            }\n\n            // patch the options that need to have values set\n            if (!value && (key === 'items' || key === 'ui-model-items')) {\n              value = uiSortableConfig.items;\n            }\n\n            return value;\n          }\n\n          function patchUISortableOptions(newVal, oldVal, sortableWidgetInstance) {\n            function addDummyOptionKey(value, key) {\n              if (!(key in opts)) {\n                // add the key in the opts object so that\n                // the patch function detects and handles it\n                opts[key] = null;\n              }\n            }\n            // for this directive to work we have to attach some callbacks\n            angular.forEach(callbacks, addDummyOptionKey);\n\n            // only initialize it in case we have to\n            // update some options of the sortable\n            var optsDiff = null;\n\n            if (oldVal) {\n              // reset deleted options to default\n              var defaultOptions;\n              angular.forEach(oldVal, function(oldValue, key) {\n                if (!newVal || !(key in newVal)) {\n                  if (key in directiveOpts) {\n                    if (key === 'ui-floating') {\n                      opts[key] = 'auto';\n                    } else {\n                      opts[key] = patchSortableOption(key, undefined);\n                    }\n                    return;\n                  }\n\n                  if (!defaultOptions) {\n                    defaultOptions = angular.element.ui.sortable().options;\n                  }\n                  var defaultValue = defaultOptions[key];\n                  defaultValue = patchSortableOption(key, defaultValue);\n\n                  if (!optsDiff) {\n                    optsDiff = {};\n                  }\n                  optsDiff[key] = defaultValue;\n                  opts[key] = defaultValue;\n                }\n              });\n            }\n\n            // update changed options\n            angular.forEach(newVal, function(value, key) {\n              // if it's a custom option of the directive,\n              // handle it approprietly\n              if (key in directiveOpts) {\n                if (key === 'ui-floating' && (value === false || value === true) && sortableWidgetInstance) {\n                  sortableWidgetInstance.floating = value;\n                }\n\n                opts[key] = patchSortableOption(key, value);\n                return;\n              }\n\n              value = patchSortableOption(key, value);\n\n              if (!optsDiff) {\n                optsDiff = {};\n              }\n              optsDiff[key] = value;\n              opts[key] = value;\n            });\n\n            return optsDiff;\n          }\n\n          function getPlaceholderElement (element) {\n            var placeholder = element.sortable('option','placeholder');\n\n            // placeholder.element will be a function if the placeholder, has\n            // been created (placeholder will be an object).  If it hasn't\n            // been created, either placeholder will be false if no\n            // placeholder class was given or placeholder.element will be\n            // undefined if a class was given (placeholder will be a string)\n            if (placeholder && placeholder.element && typeof placeholder.element === 'function') {\n              var result = placeholder.element();\n              // workaround for jquery ui 1.9.x,\n              // not returning jquery collection\n              result = angular.element(result);\n              return result;\n            }\n            return null;\n          }\n\n          function getPlaceholderExcludesludes (element, placeholder) {\n            // exact match with the placeholder's class attribute to handle\n            // the case that multiple connected sortables exist and\n            // the placeholder option equals the class of sortable items\n            var notCssSelector = opts['ui-model-items'].replace(/[^,]*>/g, '');\n            var excludes = element.find('[class=\"' + placeholder.attr('class') + '\"]:not(' + notCssSelector + ')');\n            return excludes;\n          }\n\n          function hasSortingHelper (element, ui) {\n            var helperOption = element.sortable('option','helper');\n            return helperOption === 'clone' || (typeof helperOption === 'function' && ui.item.sortable.isCustomHelperUsed());\n          }\n\n          function getSortingHelper (element, ui, savedNodes) {\n            var result = null;\n            if (hasSortingHelper(element, ui) &&\n                element.sortable( 'option', 'appendTo' ) === 'parent') {\n              // The .ui-sortable-helper element (that's the default class name)\n              // is placed last.\n              result = savedNodes.last();\n            }\n            return result;\n          }\n\n          // thanks jquery-ui\n          function isFloating (item) {\n            return (/left|right/).test(item.css('float')) || (/inline|table-cell/).test(item.css('display'));\n          }\n\n          function getElementContext(elementScopes, element) {\n            for (var i = 0; i < elementScopes.length; i++) {\n              var c = elementScopes[i];\n              if (c.element[0] === element[0]) {\n                return c;\n              }\n            }\n          }\n\n          function afterStop(e, ui) {\n            ui.item.sortable._destroy();\n          }\n\n          // return the index of ui.item among the items\n          // we can't just do ui.item.index() because there it might have siblings\n          // which are not items\n          function getItemIndex(item) {\n            return item.parent()\n              .find(opts['ui-model-items'])\n              .index(item);\n          }\n\n          var opts = {};\n\n          // directive specific options\n          var directiveOpts = {\n            'ui-floating': undefined,\n            'ui-model-items': uiSortableConfig.items\n          };\n\n          var callbacks = {\n            receive: null,\n            remove: null,\n            start: null,\n            stop: null,\n            update: null\n          };\n\n          var wrappers = {\n            helper: null\n          };\n\n          angular.extend(opts, directiveOpts, uiSortableConfig, scope.uiSortable);\n\n          if (!angular.element.fn || !angular.element.fn.jquery) {\n            $log.error('ui.sortable: jQuery should be included before AngularJS!');\n            return;\n          }\n\n          function wireUp () {\n            // When we add or remove elements, we need the sortable to 'refresh'\n            // so it can find the new/removed elements.\n            scope.$watchCollection('ngModel', function() {\n              // Timeout to let ng-repeat modify the DOM\n              $timeout(function() {\n                // ensure that the jquery-ui-sortable widget instance\n                // is still bound to the directive's element\n                if (!!getSortableWidgetInstance(element)) {\n                  element.sortable('refresh');\n                }\n              }, 0, false);\n            });\n\n            callbacks.start = function(e, ui) {\n              if (opts['ui-floating'] === 'auto') {\n                // since the drag has started, the element will be\n                // absolutely positioned, so we check its siblings\n                var siblings = ui.item.siblings();\n                var sortableWidgetInstance = getSortableWidgetInstance(angular.element(e.target));\n                sortableWidgetInstance.floating = isFloating(siblings);\n              }\n\n              // Save the starting position of dragged item\n              var index = getItemIndex(ui.item);\n              ui.item.sortable = {\n                model: ngModel.$modelValue[index],\n                index: index,\n                source: element,\n                sourceList: ui.item.parent(),\n                sourceModel: ngModel.$modelValue,\n                cancel: function () {\n                  ui.item.sortable._isCanceled = true;\n                },\n                isCanceled: function () {\n                  return ui.item.sortable._isCanceled;\n                },\n                isCustomHelperUsed: function () {\n                  return !!ui.item.sortable._isCustomHelperUsed;\n                },\n                _isCanceled: false,\n                _isCustomHelperUsed: ui.item.sortable._isCustomHelperUsed,\n                _destroy: function () {\n                  angular.forEach(ui.item.sortable, function(value, key) {\n                    ui.item.sortable[key] = undefined;\n                  });\n                },\n                _connectedSortables: [],\n                _getElementContext: function (element) {\n                  return getElementContext(this._connectedSortables, element);\n                }\n              };\n            };\n\n            callbacks.activate = function(e, ui) {\n              var isSourceContext = ui.item.sortable.source === element;\n              var savedNodesOrigin = isSourceContext ?\n                                     ui.item.sortable.sourceList :\n                                     element;\n              var elementContext = {\n                element: element,\n                scope: scope,\n                isSourceContext: isSourceContext,\n                savedNodesOrigin: savedNodesOrigin\n              };\n              // save the directive's scope so that it is accessible from ui.item.sortable\n              ui.item.sortable._connectedSortables.push(elementContext);\n\n              // We need to make a copy of the current element's contents so\n              // we can restore it after sortable has messed it up.\n              // This is inside activate (instead of start) in order to save\n              // both lists when dragging between connected lists.\n              savedNodes = savedNodesOrigin.contents();\n\n              // If this list has a placeholder (the connected lists won't),\n              // don't inlcude it in saved nodes.\n              var placeholder = getPlaceholderElement(element);\n              if (placeholder && placeholder.length) {\n                var excludes = getPlaceholderExcludesludes(element, placeholder);\n                savedNodes = savedNodes.not(excludes);\n              }\n            };\n\n            callbacks.update = function(e, ui) {\n              // Save current drop position but only if this is not a second\n              // update that happens when moving between lists because then\n              // the value will be overwritten with the old value\n              if(!ui.item.sortable.received) {\n                ui.item.sortable.dropindex = getItemIndex(ui.item);\n                var droptarget = ui.item.closest('[ui-sortable], [data-ui-sortable], [x-ui-sortable]');\n                ui.item.sortable.droptarget = droptarget;\n                ui.item.sortable.droptargetList = ui.item.parent();\n\n                var droptargetContext = ui.item.sortable._getElementContext(droptarget);\n                ui.item.sortable.droptargetModel = droptargetContext.scope.ngModel;\n\n                // Cancel the sort (let ng-repeat do the sort for us)\n                // Don't cancel if this is the received list because it has\n                // already been canceled in the other list, and trying to cancel\n                // here will mess up the DOM.\n                element.sortable('cancel');\n              }\n\n              // Put the nodes back exactly the way they started (this is very\n              // important because ng-repeat uses comment elements to delineate\n              // the start and stop of repeat sections and sortable doesn't\n              // respect their order (even if we cancel, the order of the\n              // comments are still messed up).\n              var sortingHelper = !ui.item.sortable.received && getSortingHelper(element, ui, savedNodes);\n              if (sortingHelper && sortingHelper.length) {\n                // Restore all the savedNodes except from the sorting helper element.\n                // That way it will be garbage collected.\n                savedNodes = savedNodes.not(sortingHelper);\n              }\n              var elementContext = ui.item.sortable._getElementContext(element);\n              savedNodes.appendTo(elementContext.savedNodesOrigin);\n\n              // If this is the target connected list then\n              // it's safe to clear the restored nodes since:\n              // update is currently running and\n              // stop is not called for the target list.\n              if(ui.item.sortable.received) {\n                savedNodes = null;\n              }\n\n              // If received is true (an item was dropped in from another list)\n              // then we add the new item to this list otherwise wait until the\n              // stop event where we will know if it was a sort or item was\n              // moved here from another list\n              if(ui.item.sortable.received && !ui.item.sortable.isCanceled()) {\n                scope.$apply(function () {\n                  ngModel.$modelValue.splice(ui.item.sortable.dropindex, 0,\n                                             ui.item.sortable.moved);\n                });\n              }\n            };\n\n            callbacks.stop = function(e, ui) {\n              // If the received flag hasn't be set on the item, this is a\n              // normal sort, if dropindex is set, the item was moved, so move\n              // the items in the list.\n              var wasMoved = ('dropindex' in ui.item.sortable) &&\n                              !ui.item.sortable.isCanceled();\n\n              if (wasMoved && !ui.item.sortable.received) {\n\n                scope.$apply(function () {\n                  ngModel.$modelValue.splice(\n                    ui.item.sortable.dropindex, 0,\n                    ngModel.$modelValue.splice(ui.item.sortable.index, 1)[0]);\n                });\n              } else if (!wasMoved &&\n                         !angular.equals(element.contents().toArray(), savedNodes.toArray())) {\n                // if the item was not moved\n                // and the DOM element order has changed,\n                // then restore the elements\n                // so that the ngRepeat's comment are correct.\n\n                var sortingHelper = getSortingHelper(element, ui, savedNodes);\n                if (sortingHelper && sortingHelper.length) {\n                  // Restore all the savedNodes except from the sorting helper element.\n                  // That way it will be garbage collected.\n                  savedNodes = savedNodes.not(sortingHelper);\n                }\n                var elementContext = ui.item.sortable._getElementContext(element);\n                savedNodes.appendTo(elementContext.savedNodesOrigin);\n              }\n\n              // It's now safe to clear the savedNodes\n              // since stop is the last callback.\n              savedNodes = null;\n            };\n\n            callbacks.receive = function(e, ui) {\n              // An item was dropped here from another list, set a flag on the\n              // item.\n              ui.item.sortable.received = true;\n            };\n\n            callbacks.remove = function(e, ui) {\n              // Workaround for a problem observed in nested connected lists.\n              // There should be an 'update' event before 'remove' when moving\n              // elements. If the event did not fire, cancel sorting.\n              if (!('dropindex' in ui.item.sortable)) {\n                element.sortable('cancel');\n                ui.item.sortable.cancel();\n              }\n\n              // Remove the item from this list's model and copy data into item,\n              // so the next list can retrive it\n              if (!ui.item.sortable.isCanceled()) {\n                scope.$apply(function () {\n                  ui.item.sortable.moved = ngModel.$modelValue.splice(\n                    ui.item.sortable.index, 1)[0];\n                });\n              }\n            };\n\n            wrappers.helper = function (inner) {\n              if (inner && typeof inner === 'function') {\n                return function (e, item) {\n                  var oldItemSortable = item.sortable;\n                  var index = getItemIndex(item);\n                  item.sortable = {\n                    model: ngModel.$modelValue[index],\n                    index: index,\n                    source: element,\n                    sourceList: item.parent(),\n                    sourceModel: ngModel.$modelValue,\n                    _restore: function () {\n                      angular.forEach(item.sortable, function(value, key) {\n                        item.sortable[key] = undefined;\n                      });\n\n                      item.sortable = oldItemSortable;\n                    }\n                  };\n\n                  var innerResult = inner.apply(this, arguments);\n                  item.sortable._restore();\n                  item.sortable._isCustomHelperUsed = item !== innerResult;\n                  return innerResult;\n                };\n              }\n              return inner;\n            };\n\n            scope.$watchCollection('uiSortable', function(newVal, oldVal) {\n              // ensure that the jquery-ui-sortable widget instance\n              // is still bound to the directive's element\n              var sortableWidgetInstance = getSortableWidgetInstance(element);\n              if (!!sortableWidgetInstance) {\n                var optsDiff = patchUISortableOptions(newVal, oldVal, sortableWidgetInstance);\n\n                if (optsDiff) {\n                  element.sortable('option', optsDiff);\n                }\n              }\n            }, true);\n\n            patchUISortableOptions(opts);\n          }\n\n          function init () {\n            if (ngModel) {\n              wireUp();\n            } else {\n              $log.info('ui.sortable: ngModel not provided!', element);\n            }\n\n            // Create sortable\n            element.sortable(opts);\n          }\n\n          function initIfEnabled () {\n            if (scope.uiSortable && scope.uiSortable.disabled) {\n              return false;\n            }\n\n            init();\n\n            // Stop Watcher\n            initIfEnabled.cancelWatcher();\n            initIfEnabled.cancelWatcher = angular.noop;\n\n            return true;\n          }\n\n          initIfEnabled.cancelWatcher = angular.noop;\n\n          if (!initIfEnabled()) {\n            initIfEnabled.cancelWatcher = scope.$watch('uiSortable.disabled', initIfEnabled);\n          }\n        }\n      };\n    }\n  ]);\n","/*\r\n * Main Application Script\r\n *\r\n */\r\n\r\nvar app = angular.module('app', modulesList);\r\n\r\napp.controller(\"main\", ['$scope',\r\n\tfunction($scope) {\r\n\t\tvar self = this;\r\n\r\n\t}\r\n]);"]}